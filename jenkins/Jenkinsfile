pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "default"
    }

    stages {
        stage('Cloning') {
            steps {
                git branch: "main", url: 'https://github.com/pipecm/my-spring-boot-app.git'
            }
        }

        stage('Analysis') {
            steps {
                withSonarQubeEnv('sq-docker'){
                    sh "echo 'Starting SonarQube analysis'"
                    sh "mvn sonar:sonar -Dsonar.projectKey=my-sb-app -Dsonar.projectName='my-sb-app' -Dsonar.host.url=http://pipecm-vm:9000 -Dsonar.token=sqp_759a9a5d7d3fa627aaf381d1ef568dd64b3636a6"
                    sh "echo 'Analysis finished successfully'"
                }
            }
        }

        stage('Build') {
            steps {
                sh "echo 'Starting build'"
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    sh "echo 'Build success'"
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                }
            }
        }

        stage('Finish') {
            steps {
                sh "echo 'Deployment finished successfully'"
            }
        }
    }
}
